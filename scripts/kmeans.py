# -*- coding: utf-8 -*-
"""KMeans.ipynb

Automatically generated by Colaboratory.
"""

from sklearn.cluster import KMeans
import numpy as np
X = np.array([[1, 2], [3, 4], [4, 3], [5, 2], [5, 3], [6, 4], [6, 4], [5, 5], [-1, 5]])

initi = np.array([[3, 4], [7, 2]], np.float64)

model = KMeans(init = initi, n_init=2, random_state = 0).fit(X)
# ALGORITMO NO FUNCIONAL

def distance(a, b):
  d = (a[0] - b[0])**2 + (a[1] - b[1])**2
  return d

distance([2, 4], [4, 6])

X = [[1, 2], [3, 4], [4, 3], [5, 2], [5, 3], [6, 4], [6, 4], [5, 5], [-1, 5]]
C1 = [3, 4]
C2 = [7, 2]

for i in range(10):
  cluster_1 = []
  cluster_2 = []
  # asignacion
  for x in X:
    if distance(x, C1) < distance(x, C2):
      cluster_1.append(x)
    else:
      cluster_2.append(x)

  # actualizacion
  C1 = np.mean(cluster_1, axis = 0)
  C2 = np.mean(cluster_2, axis = 0)
  print("iteracion " + str(i))
  print(C1)
  print(C2)